[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchPurchaseOrder << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findMany()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:231:62

  228 }
  229 
  230 if (checkPurchaseOrderDataAvailability.length > 0) {
â†’ 231   const purchaseOrder = await transaction.purchase_order.findMany({
          where: {
            is_delete: false
          },
          include: {
        ?   purchase_request_data?: true,
        ?   vendor_data?: true,
            indent_request_data: true,
            ~~~~~~~~~~~~~~~~~~~
        ?   purchase_order_item?: true,
        ?   _count?: true
          },
          orderBy: [
            {
              updated_date: 'desc'
            }
          ],
          skip: 0,
          take: 10
        })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchPurchaseOrder << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findMany()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:231:62

  228 }
  229 
  230 if (checkPurchaseOrderDataAvailability.length > 0) {
â†’ 231   const purchaseOrder = await transaction.purchase_order.findMany({
          where: {
            is_delete: false,
            AND: [
              {
                purchase_request_data: {
                  project_id: 195
                }
              },
              {
                status: 'Processing'
              }
            ]
          },
          include: {
        ?   purchase_request_data?: true,
        ?   vendor_data?: true,
            indent_request_data: true,
            ~~~~~~~~~~~~~~~~~~~
        ?   purchase_order_item?: true,
        ?   _count?: true
          },
          orderBy: [
            {
              updated_date: 'desc'
            }
          ],
          skip: 0,
          take: 10
        })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchPurchaseOrder << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findMany()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:231:62

  228 }
  229 
  230 if (checkPurchaseOrderDataAvailability.length > 0) {
â†’ 231   const purchaseOrder = await transaction.purchase_order.findMany({
          where: {
            is_delete: false,
            AND: [
              {
                purchase_request_data: {
                  project_id: 196
                }
              },
              {
                status: 'Processing'
              }
            ]
          },
          include: {
        ?   purchase_request_data?: true,
        ?   vendor_data?: true,
            indent_request_data: true,
            ~~~~~~~~~~~~~~~~~~~
        ?   purchase_order_item?: true,
        ?   _count?: true
          },
          orderBy: [
            {
              updated_date: 'desc'
            }
          ],
          skip: 0,
          take: 10
        })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByPurchaseOrderId << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:118:60

  115 const getById = async (purchaseOrderId: number, connectionObj = null) => {
  116   try {
  117     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 118     const purchaseOrder = await transaction.purchase_order.findFirst({
            where: {
              purchase_order_id: 144,
              is_delete: false
            },
            include: {
          ?   purchase_request_data?: true,
          ?   vendor_data?: true,
          ?   purchase_order_item?: true,
              indent_request_data: true,
              ~~~~~~~~~~~~~~~~~~~
          ?   _count?: true
            }
          })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByPurchaseOrderId << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:118:60

  115 const getById = async (purchaseOrderId: number, connectionObj = null) => {
  116   try {
  117     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 118     const purchaseOrder = await transaction.purchase_order.findFirst({
            where: {
              purchase_order_id: 144,
              is_delete: false
            },
            include: {
          ?   purchase_request_data?: true,
          ?   vendor_data?: true,
          ?   purchase_order_item?: true,
              indent_request_data: true,
              ~~~~~~~~~~~~~~~~~~~
          ?   _count?: true
            }
          })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchPurchaseOrder << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findMany()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:231:62

  228 }
  229 
  230 if (checkPurchaseOrderDataAvailability.length > 0) {
â†’ 231   const purchaseOrder = await transaction.purchase_order.findMany({
          where: {
            is_delete: false
          },
          include: {
        ?   purchase_request_data?: true,
        ?   vendor_data?: true,
            indent_request_data: true,
            ~~~~~~~~~~~~~~~~~~~
        ?   purchase_order_item?: true,
        ?   _count?: true
          },
          orderBy: [
            {
              updated_date: 'desc'
            }
          ],
          skip: 0,
          take: 10
        })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByPurchaseOrderId << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:118:60

  115 const getById = async (purchaseOrderId: number, connectionObj = null) => {
  116   try {
  117     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 118     const purchaseOrder = await transaction.purchase_order.findFirst({
            where: {
              purchase_order_id: 140,
              is_delete: false
            },
            include: {
          ?   purchase_request_data?: true,
          ?   vendor_data?: true,
          ?   purchase_order_item?: true,
              indent_request_data: true,
              ~~~~~~~~~~~~~~~~~~~
          ?   _count?: true
            }
          })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByPurchaseOrderId << ERRSTRING >>Error: 
Invalid `transaction.purchase_order.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\purchaseOrder.dao.ts:118:60

  115 const getById = async (purchaseOrderId: number, connectionObj = null) => {
  116   try {
  117     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 118     const purchaseOrder = await transaction.purchase_order.findFirst({
            where: {
              purchase_order_id: 140,
              is_delete: false
            },
            include: {
          ?   purchase_request_data?: true,
          ?   vendor_data?: true,
          ?   purchase_order_item?: true,
              indent_request_data: true,
              ~~~~~~~~~~~~~~~~~~~
          ?   _count?: true
            }
          })


Unknown field `indent_request_data` for include statement on model purchase_order. Available options are listed in green. Did you mean `purchase_request_data`?

[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectIdAndSiteId << ERRSTRING >>Error: 
Invalid `transaction.site_expense.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\siteExpense.dao.ts:404:56

  401 ) => {
  402   try {
  403     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 404     const siteExpense = await transaction.site_expense.findFirst({
            where: {
              project_id: NaN,
                          ~~~
              site_id: NaN,
                       ~~~
              is_delete: false
            },
            include: {
              site_expense_details: {
                where: {
                  is_delete: false
                },
                include: {
                  progressed_by_data: {
                    select: {
                      first_name: true,
                      last_name: true
                    }
                  }
                }
              },
              site_data: {
                select: {
                  name: true
                }
              },
              project_data: {
                select: {
                  project_name: true
                }
              }
            }
          })

Argument project_id: Got invalid value NaN on prisma.findFirstsite_expense. Provided Float, expected IntNullableFilter or Int or Null:
type IntNullableFilter {
  equals?: Int | Null
  in?: List<Int> | Int | Null
  notIn?: List<Int> | Int | Null
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntNullableFilter | Null
}
Argument site_id: Got invalid value NaN on prisma.findFirstsite_expense. Provided Float, expected IntNullableFilter or Int or Null:
type IntNullableFilter {
  equals?: Int | Null
  in?: List<Int> | Int | Null
  notIn?: List<Int> | Int | Null
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntNullableFilter | Null
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectIdAndSiteId << ERRSTRING >>Error: 
Invalid `transaction.site_expense.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\siteExpense.dao.ts:404:56

  401 ) => {
  402   try {
  403     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 404     const siteExpense = await transaction.site_expense.findFirst({
            where: {
              project_id: NaN,
                          ~~~
              site_id: NaN,
                       ~~~
              is_delete: false
            },
            include: {
              site_expense_details: {
                where: {
                  is_delete: false
                },
                include: {
                  progressed_by_data: {
                    select: {
                      first_name: true,
                      last_name: true
                    }
                  }
                }
              },
              site_data: {
                select: {
                  name: true
                }
              },
              project_data: {
                select: {
                  project_name: true
                }
              }
            }
          })

Argument project_id: Got invalid value NaN on prisma.findFirstsite_expense. Provided Float, expected IntNullableFilter or Int or Null:
type IntNullableFilter {
  equals?: Int | Null
  in?: List<Int> | Int | Null
  notIn?: List<Int> | Int | Null
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntNullableFilter | Null
}
Argument site_id: Got invalid value NaN on prisma.findFirstsite_expense. Provided Float, expected IntNullableFilter or Int or Null:
type IntNullableFilter {
  equals?: Int | Null
  in?: List<Int> | Int | Null
  notIn?: List<Int> | Int | Null
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntNullableFilter | Null
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByCategoryId << ERRSTRING >>Error: 
Invalid `transaction.category.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\category.dao.ts:94:49

  91 const getById = async (categoryId: number, connectionObj = null) => {
  92   try {
  93     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 94     const category = await transaction.category.findFirst({
           where: {
             category_id: NaN,
                          ~~~
             is_delete: false
           },
           include: {
             project: true,
             bom_configuration_data: {
               include: {
                 bom_type_data: {
                   select: {
                     master_data_name: true
                   }
                 }
               }
             }
           }
         })

Argument category_id: Got invalid value NaN on prisma.findFirstcategory. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByCategoryId << ERRSTRING >>Error: 
Invalid `transaction.category.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\category.dao.ts:94:49

  91 const getById = async (categoryId: number, connectionObj = null) => {
  92   try {
  93     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 94     const category = await transaction.category.findFirst({
           where: {
             category_id: NaN,
                          ~~~
             is_delete: false
           },
           include: {
             project: true,
             bom_configuration_data: {
               include: {
                 bom_type_data: {
                   select: {
                     master_data_name: true
                   }
                 }
               }
             }
           }
         })

Argument category_id: Got invalid value NaN on prisma.findFirstcategory. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByCategoryId << ERRSTRING >>Error: 
Invalid `transaction.category.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\category.dao.ts:94:49

  91 const getById = async (categoryId: number, connectionObj = null) => {
  92   try {
  93     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 94     const category = await transaction.category.findFirst({
           where: {
             category_id: NaN,
                          ~~~
             is_delete: false
           },
           include: {
             project: true,
             bom_configuration_data: {
               include: {
                 bom_type_data: {
                   select: {
                     master_data_name: true
                   }
                 }
               }
             }
           }
         })

Argument category_id: Got invalid value NaN on prisma.findFirstcategory. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst(
Timed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 9)
[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchVendorQuotes << ERRSTRING >>Error: connect ETIMEDOUT 3.108.30.2:5432
