<<<<<<< Updated upstream
=======
[31merror[39m: ERRORS: status code: Error << DETAILS >>/createIndentRequest << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `tx.indent_request.create()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\indentRequest.dao.ts:49:55

  46 
  47 const result = await transaction
  48   .$transaction(async (tx) => {
â†’ 49     const indentRequest = await tx.indent_request.create(
Foreign key constraint failed on the field: `fk_indent_request_site_id (index)`
[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchIndentRequest << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.indent_request.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\indentRequest.dao.ts:399:40

  396 const filter = filters.filterIndentRequest;
  397 
  398 const indentRequestDataAvailablity =
â†’ 399   await transaction.indent_request.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchIndentRequest << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.indent_request.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\indentRequest.dao.ts:399:40

  396 const filter = filters.filterIndentRequest;
  397 
  398 const indentRequestDataAvailablity =
â†’ 399   await transaction.indent_request.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getAll << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `prisma.users.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\user.dao.ts:134:38

  131 
  132 const getAll = async (user_status) => {
  133   try {
â†’ 134     const users = await prisma.users.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getUserByRoleName << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.users.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\user.dao.ts:409:43

  406 const getUserByRoleName = async (role_name: string, connectionObj = null) => {
  407   try {
  408     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 409     const users = await transaction.users.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getAllClients << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.client.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\client.dao.ts:77:45

  74 const getAll = async (connectionObj = null) => {
  75   try {
  76     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 77     const client = await transaction.client.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getUserByRoleName << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.users.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\user.dao.ts:409:43

  406 const getUserByRoleName = async (role_name: string, connectionObj = null) => {
  407   try {
  408     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 409     const users = await transaction.users.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByParentType << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.master_data.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\masterData.dao.ts:333:56

  330 ) => {
  331   try {
  332     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 333     const masterDataId = await transaction.master_data.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getAll << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `prisma.users.findMany()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\user.dao.ts:134:38

  131 
  132 const getAll = async (user_status) => {
  133   try {
â†’ 134     const users = await prisma.users.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\Oct\24\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/searchMasterData << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.master_data.findMany()` invocation in
D:\2023\October\ERP project\05-10-2023\omni-flux\apps\api\src\dao\masterData.dao.ts:288:53

  285     return getData;
  286   }
  287 } else {
â†’ 288   const getData = await transaction.master_data.findMany(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\October\ERP project\05-10-2023\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByProjectId << ERRSTRING >>PrismaClientKnownRequestError: 
Invalid `transaction.project.findFirst()` invocation in
D:\2023\October\ERP project\05-10-2023\omni-flux\apps\api\src\dao\project.dao.ts:329:47

  326 const getById = async (projectId: number, connectionObj = null) => {
  327   try {
  328     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 329     const project = await transaction.project.findFirst(
Can't reach database server at `3.108.30.2`:`5432`

Please make sure your database server is running at `3.108.30.2`:`5432`.
>>>>>>> Stashed changes
[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


[31merror[39m: ERRORS: status code: Error << DETAILS >>/getByVendorQuotesId << ERRSTRING >>Error: 
Invalid `transaction.vendor_quotes.findFirst()` invocation in
D:\Jegan\ERP\2023\Sep\30\omni-flux\apps\api\src\dao\vendorQuotes.dao.ts:91:58

  88 const getById = async (vendorQuotesId: number, connectionObj = null) => {
  89   try {
  90     const transaction = connectionObj !== null ? connectionObj : prisma;
â†’ 91     const vendorQuotes = await transaction.vendor_quotes.findFirst({
           where: {
             vendor_quotes_id: NaN,
                               ~~~
             is_delete: false
           },
           include: {
             vendor_data: true,
             purchase_request_data: true
           }
         })

Argument vendor_quotes_id: Got invalid value NaN on prisma.findFirstvendor_quotes. Provided Float, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int> | Int
  notIn?: List<Int> | Int
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


