generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model users {
  user_id                    Int                          @id @default(autoincrement())
  first_name                 String?                      @db.VarChar(100)
  last_name                  String?                      @db.VarChar(100)
  user_password              String?                      @db.VarChar(255)
  contact_no                 String?                      @db.VarChar(20)
  email_id                   String                       @db.VarChar(100)
  user_status                String?                      @db.VarChar(5)
  created_by                 Int?
  created_date               DateTime
  updated_by                 Int?
  updated_date               DateTime
  is_delete                  Boolean                      @default(false) @db.Boolean
  is_initial_login           Boolean                      @default(true) @db.Boolean
  department                 String?                      @db.VarChar(100)
  is_two_factor              Boolean                      @default(false) @db.Boolean
  parent_user_id             Int?
  otp_secret                 Int?
  otp_attempts               Int?
  otp_expired_in             DateTime?
  is_otp_verified            Boolean                      @default(false) @db.Boolean
  parent_data                users?                       @relation("childToParent", fields: [parent_user_id], references: [user_id])
  child_data                 users[]                      @relation("childToParent")
  projects                   project[]                    @relation("approvar_relation")
  user_profiles              user_profiles?
  sales_person_name          lead_enquiry_product[]
  project                    project[]
  site_expense_details       site_expense_details[]
  project_site               project_site[]
  user_roles                 user_roles[]
  user_primary_project       user_primary_project[]
  project_member_association project_member_association[]
  store                      store[]
  indent_requester           indent_request[]             @relation("indentRequesterUser")
  indent_approvar            indent_request[]             @relation("indentApprovarUser")
  purchase_request           purchase_request[]

  @@unique([email_id], name: "uk_users_email_id")
}

model user_roles {
  user_role_id Int      @id @default(autoincrement())
  user_id      Int?
  role_id      Int?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  user_data    users?   @relation(fields: [user_id], references: [user_id])
  role_data    role?    @relation(fields: [role_id], references: [role_id])

  @@unique([user_id, role_id], name: "uk_user_roles_user_id_role_id")
}

model role {
  role_id                    Int                          @id @default(autoincrement())
  role_name                  String                       @db.VarChar(100)
  created_date               DateTime
  updated_date               DateTime
  created_by                 Int?
  updated_by                 Int?
  description                String?
  user_roles                 user_roles[]
  permissions                permissions[]
  project_member_association project_member_association[]

  @@map("role")
}

model gst {
  gst_id       Int      @id @default(autoincrement())
  rate         Float?
  cgst_rate    Float?
  igst_rate    Float?
  created_date DateTime @default(now())
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  sgst_rate    Float?
  item         item[]
  is_delete    Boolean  @default(false) @db.Boolean
}

model uom {
  uom_id                 Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(50)
  description            String?
  created_date           DateTime                 @default(now())
  updated_date           DateTime                 @default(now())
  created_by             Int?
  updated_by             Int?
  uom_type               String?
  item                   item[]
  bom_detail             bom_detail[]
  is_delete              Boolean                  @default(false) @db.Boolean
  project_workbreak_down project_workbreak_down[]
  labour                 labour[]
  machinery              machinery[]

  @@map(name: "uom")
}

model client {
  client_id       Int            @id @default(autoincrement())
  name            String         @db.VarChar(100)
  contact_details String
  created_date    DateTime
  updated_date    DateTime
  created_by      Int?
  updated_by      Int?
  projects        project[]
  lead_enquiry    lead_enquiry[]
  is_delete       Boolean        @default(false) @db.Boolean
}

model hsn_code {
  hsn_code_id  Int      @id @default(autoincrement())
  code         String   @db.VarChar(100)
  description  String?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  item         item[]
  is_delete    Boolean  @default(false) @db.Boolean

  @@unique([code], name: "uk_hsn_code_code")
  @@map(name: "hsn_code")
}

model category {
  category_id            Int                @id @default(autoincrement())
  name                   String             @db.VarChar(100)
  project_id             Int?
  budget                 Float?
  created_date           DateTime
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?
  bom_configuration_id   Int?
  bom_configuration_data bom_configuration? @relation(fields: [bom_configuration_id], references: [bom_configuration_id])
  project                project?           @relation(fields: [project_id], references: [project_id])
  is_delete              Boolean            @default(false) @db.Boolean
  description            String?
  start_date             DateTime?
  end_date               DateTime?
  sub_category           sub_category[]
  bom_detail             bom_detail[]
}

model sub_category {
  sub_category_id        Int                @id @default(autoincrement())
  name                   String             @db.VarChar(100)
  category_id            Int?
  budget                 Float?
  created_date           DateTime
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?
  start_date             DateTime?
  end_date               DateTime?
  is_delete              Boolean            @default(false) @db.Boolean
  bom_configuration_id   Int?
  bom_configuration_data bom_configuration? @relation(fields: [bom_configuration_id], references: [bom_configuration_id])
  category               category?          @relation(fields: [category_id], references: [category_id])
  description            String?
  project_id             Int?
  project_data           project?           @relation(fields: [project_id], references: [project_id])
  sub_sub_category       sub_sub_category[]
  bom_detail             bom_detail[]
}

model sub_sub_category {
  sub_sub_category_id        Int                @id @default(autoincrement())
  name                       String             @db.VarChar(100)
  sub_category_id            Int?
  budget                     Float?
  created_date               DateTime
  updated_date               DateTime
  created_by                 Int?
  updated_by                 Int?
  is_delete                  Boolean            @default(false) @db.Boolean
  description                String?
  project_id                 Int?
  parent_sub_sub_category_id Int?
  project_data               project?           @relation(fields: [project_id], references: [project_id])
  parent_data                sub_sub_category?  @relation("ChildToParent", fields: [parent_sub_sub_category_id], references: [sub_sub_category_id])
  child_data                 sub_sub_category[] @relation("ChildToParent")
  sub_category               sub_category?      @relation(fields: [sub_category_id], references: [sub_category_id])
  bom_detail                 bom_detail[]
}

model project {
  project_id                 Int                          @id @default(autoincrement())
  project_name               String                       @db.VarChar(100)
  description                String?
  user_id                    Int?
  date_started               DateTime?
  date_ended                 DateTime?
  status                     String?                      @db.VarChar(50)
  client_id                  Int?
  project_documents          Json?
  created_date               DateTime                     @default(now())
  updated_date               DateTime                     @updatedAt
  created_by                 Int?
  updated_by                 Int?
  is_delete                  Boolean                      @default(false)
  project_notes              String?
  project_type               String?
  code                       String?
  estimated_budget           Float?
  actual_budget              Float?
  approvar_id                Int?
  user                       users?                       @relation(fields: [user_id], references: [user_id])
  client                     client?                      @relation(fields: [client_id], references: [client_id])
  approvar_data              users?                       @relation("approvar_relation", fields: [approvar_id], references: [user_id])
  category                   category[]
  project_workbreak_down     project_workbreak_down[]
  project_site               project_site[]
  site_expense               site_expense[]
  sub_category               sub_category[]
  sub_sub_category           sub_sub_category[]
  bom_configuration          bom_configuration[]
  user_primary_project       user_primary_project[]
  project_member_association project_member_association[]
  store                      store[]
  indent_request             indent_request[]
  inventory                  inventory[]
  purchase_request           purchase_request[]
}

model project_expense {
  project_expense_id Int       @id @default(autoincrement())
  project_id         Int?
  description        String?
  amount             Float?
  date               DateTime?
  document_url       String?
  created_date       DateTime
  updated_date       DateTime
  created_by         Int?
  updated_by         Int?

  @@map("project_expense")
}

model site_contractor {
  site_contractor_id     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(100)
  type                   String?
  mobile_number          String?
  contact_number         String?
  address                Json?                    @map("address") @db.Json
  description            String?
  created_date           DateTime
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?
  is_delete              Boolean                  @default(false)
  code                   String?
  project_workbreak_down project_workbreak_down[]
  project_site           project_site[]
  site_expense           site_expense[]
  store                  store[]

  @@map("site_contractor")
}

model site_expense {
  site_expense_id      Int                    @id @default(autoincrement())
  site_id              Int?
  project_id           Int?
  employee_name        String?
  employee_id          String?
  employee_phone       String?
  purpose              String?
  department           String?
  designation          String?
  start_date           DateTime?
  end_date             DateTime?
  is_delete            Boolean                @default(false)
  created_date         DateTime
  updated_date         DateTime
  created_by           Int?
  updated_by           Int?
  site_data            site_contractor?       @relation(fields: [site_id], references: [site_contractor_id])
  project_data         project?               @relation(fields: [project_id], references: [project_id])
  site_expense_details site_expense_details[]

  @@map("site_expense")
}

model site_expense_details {
  site_expense_details_id Int           @id @default(autoincrement())
  site_expense_id         Int
  description             String?
  air_transport           Float?
  fuel                    Float?
  labour_advance          Float?
  phone_stationary        Float?
  food_snacks             Float?
  purchase_service        Float?
  others                  Float?
  total                   Float?
  bill_details            Json?
  created_date            DateTime
  updated_date            DateTime
  created_by              Int?
  updated_by              Int?
  status                  String?
  comments                String?
  progressed_date         DateTime?
  progressed_by           Int?
  is_delete               Boolean       @default(false)
  site_expense_data       site_expense? @relation(fields: [site_expense_id], references: [site_expense_id])
  progressed_by_data      users?        @relation(fields: [progressed_by], references: [user_id])
}

model warehouse {
  warehouse_id   Int      @id @default(autoincrement())
  warehouse_name String   @db.VarChar(100)
  location       String?
  created_date   DateTime
  updated_date   DateTime
  created_by     Int?
  updated_by     Int?

  @@map("warehouse")
}

model warehouse_inventory {
  warehouse_inventory_id Int      @id @default(autoincrement())
  warehouse_id           Int?
  item_id                Int?
  quantity               Int?
  created_date           DateTime
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?

  @@unique([warehouse_id, item_id], name: "fk_warehouse_inventory_warehouse_id_item_id")
  @@map("warehouse_inventory")
}

model item {
  item_id                   Int                         @id @default(autoincrement())
  item_name                 String                      @db.VarChar(100)
  description               String?
  hsn_code_id               Int?
  gst_id                    Int?
  uom_id                    Int?
  created_date              DateTime
  updated_date              DateTime
  created_by                Int?
  updated_by                Int?
  item_type_id              Int?
  brand_id                  Int?
  rate                      Float?
  is_delete                 Boolean                     @default(false)
  hsn_code                  hsn_code?                   @relation(fields: [hsn_code_id], references: [hsn_code_id])
  gst                       gst?                        @relation(fields: [gst_id], references: [gst_id])
  uom                       uom?                        @relation(fields: [uom_id], references: [uom_id])
  item_type                 master_data?                @relation(fields: [item_type_id], references: [master_data_id])
  brand                     brand?                      @relation(fields: [brand_id], references: [brand_id])
  lead_enquiry_product_item lead_enquiry_product_item[]
  bom_detail                bom_detail[]
  inventory                 inventory[]

  @@map(name: "item")
}

model stock {
  stock_id         Int      @id @default(autoincrement())
  item_id          Int?
  transaction_type String?
  quantity         Int?
  transaction_date DateTime
  warehouse_id     Int?
  site_id          Int?
  created_date     DateTime
  updated_date     DateTime
  created_by       Int?
  updated_by       Int?
}

model item_type {
  item_type_id        Int      @id @default(autoincrement())
  item_type_item_code String?
  item_type_item_name String?
  created_date        DateTime
  updated_date        DateTime
  created_by          Int?
  updated_by          Int?
}

model brand {
  brand_id     Int      @id @default(autoincrement())
  brand_name   String?
  created_by   Int?
  updated_by   Int?
  created_date DateTime
  updated_date DateTime

  item item[]
}

model user_profiles {
  user_profile_id   Int       @id @default(autoincrement())
  user_id           Int
  profile_image_url String?
  date_of_birth     DateTime?
  gender            String?
  address           Json?
  additional_info   Json?
  created_date      DateTime
  updated_date      DateTime
  created_by        Int?
  updated_by        Int?
  is_delete         Boolean   @default(false)
  user              users     @relation(fields: [user_id], references: [user_id])

  @@unique([user_id])
}

model master_data {
  master_data_id                     Int                    @id @default(autoincrement())
  master_data_name                   String                 @db.VarChar(100)
  master_data_description            String?                @db.VarChar(250)
  master_data_type                   String                 @db.VarChar(20)
  parent_master_data_id              Int?
  is_delete                          Boolean                @default(false)
  created_date                       DateTime
  updated_date                       DateTime
  created_by                         Int?
  updated_by                         Int?
  parent                             master_data?           @relation("ChildToParent", fields: [parent_master_data_id], references: [master_data_id])
  children                           master_data[]          @relation("ChildToParent")
  leadEnquiries                      lead_enquiry[]
  lead_enquiry_product               lead_enquiry_product[]
  lead_enquiry_tender                lead_enquiry_tender[]
  vendor_as_vendor_category          vendor[]               @relation("VendorCategoryRelation")
  vendor_as_preferred_payment_method vendor[]               @relation("PreferredPaymentMethodRelation")
  item                               item[]
  bom_configuration                  bom_configuration[]

  @@unique([master_data_type, parent_master_data_id])
  @@map("master_data")
}

model lead_enquiry {
  lead_enquiry_id      Int                    @id @default(autoincrement())
  lead_type            String
  lead_code            String
  client               Int
  client_level         Int
  client_contact_name  String?
  client_contact_email String?
  client_contact_phone String?
  our_remarks          String?
  client_remark        String?
  doc_url              String?
  status               String
  is_delete            Boolean                @default(false)
  created_date         DateTime
  updated_date         DateTime
  created_by           Int?
  updated_by           Int?
  status_remarks       String?
  client_info          client                 @relation(fields: [client], references: [client_id])
  client_level_info    master_data            @relation(fields: [client_level], references: [master_data_id])
  lead_enquiry_product lead_enquiry_product[]
  lead_enquiry_tenders lead_enquiry_tender[]
}

model lead_enquiry_product {
  lead_product_id           Int                         @id @default(autoincrement())
  lead_enquiry_id           Int?
  source_name               String
  probability               Int?
  approx_value              Float?
  sales_person_name         Int?
  is_delete                 Boolean                     @default(false)
  created_date              DateTime
  updated_date              DateTime
  created_by                Int?
  updated_by                Int?
  lead_enquiry              lead_enquiry?               @relation(fields: [lead_enquiry_id], references: [lead_enquiry_id])
  probability_details       master_data?                @relation(fields: [probability], references: [master_data_id])
  sales_person_details      users?                      @relation(fields: [sales_person_name], references: [user_id])
  lead_enquiry_product_item lead_enquiry_product_item[]
}

model lead_enquiry_tender {
  lead_tender_id           Int           @id @default(autoincrement())
  lead_enquiry_id          Int?
  approx_value             Float?
  tender_reg_no            String?
  tender_identification_no String?
  tender_name              String?
  tender_issue_date        DateTime?
  tender_due_date          DateTime?
  tender_type              String?
  estimated_value          Float?
  industry_sector          Int?
  is_delete                Boolean       @default(false)
  created_date             DateTime
  updated_date             DateTime
  created_by               Int?
  updated_by               Int?
  lead_enquiry             lead_enquiry? @relation(fields: [lead_enquiry_id], references: [lead_enquiry_id])
  industry_sector_data     master_data?  @relation(fields: [industry_sector], references: [master_data_id])
}

model lead_enquiry_product_item {
  lead_enquiry_product_item_id Int                   @id @default(autoincrement())
  lead_enquiry_product_id      Int?
  product_id                   Int?
  quantity                     Int?
  created_date                 DateTime
  updated_date                 DateTime
  created_by                   Int?
  updated_by                   Int?
  product                      item?                 @relation(fields: [product_id], references: [item_id])
  lead_enquiry_product         lead_enquiry_product? @relation(fields: [lead_enquiry_product_id], references: [lead_product_id])
}

model project_workbreak_down {
  project_workbreak_down_id          Int                      @id @default(autoincrement())
  project_workbreak_down_name        String
  project_workbreak_down_description String?
  project_workbreak_down_code        String?
  parent_project_workbreak_down_id   Int?
  rate                               Float?
  uom_id                             Int?
  project_workbreak_down_type        String
  project_id                         Int?
  site_id                            Int?
  is_delete                          Boolean                  @default(false)
  created_date                       DateTime
  updated_date                       DateTime
  created_by                         Int?
  updated_by                         Int?
  parent_project_workbreak_down      project_workbreak_down?  @relation("ChildToParent", fields: [parent_project_workbreak_down_id], references: [project_workbreak_down_id])
  child_project_workbreak_down       project_workbreak_down[] @relation("ChildToParent")
  uom_details                        uom?                     @relation(fields: [uom_id], references: [uom_id])
  project_details                    project?                 @relation(fields: [project_id], references: [project_id])
  site_details                       site_contractor?         @relation(fields: [site_id], references: [site_contractor_id])
}

model project_site {
  project_site_id  Int              @id @default(autoincrement())
  project_id       Int
  site_id          Int
  status           String
  estimated_budget Float?
  actual_budget    Float?
  created_date     DateTime
  updated_date     DateTime
  created_by       Int?
  updated_by       Int?
  approvar_id      Int?
  approvar_data    users?           @relation(fields: [approvar_id], references: [user_id])
  project_details  project?         @relation(fields: [project_id], references: [project_id])
  site_details     site_contractor? @relation(fields: [site_id], references: [site_contractor_id])
}

model capability {
  capability_id   Int           @id @default(autoincrement())
  capability_name String
  description     String?
  permission_type String?
  ui_type         String?
  is_delete       Boolean       @default(false)
  created_date    DateTime
  updated_date    DateTime
  created_by      Int?
  updated_by      Int?
  permissions     permissions[]
}

model permissions {
  permission_id   Int         @id @default(autoincrement())
  is_create       Boolean     @default(false)
  is_update       Boolean     @default(false)
  is_read         Boolean     @default(false)
  is_visible      Boolean     @default(false)
  capability_id   Int?
  role_id         Int?
  is_delete       Boolean     @default(false)
  created_date    DateTime
  updated_date    DateTime
  created_by      Int?
  updated_by      Int?
  role_data       role?       @relation(fields: [role_id], references: [role_id])
  capability_data capability? @relation(fields: [capability_id], references: [capability_id])
}

model bom_detail {
  bom_detail_id          Int                      @id @default(autoincrement())
  bom_name               String                   @db.VarChar(255)
  quantity               Int?
  uom_id                 Int?
  category_id            Int?
  sub_category_id        Int?
  sub_sub_category_id    Int?
  item_id                Int?
  is_delete              Boolean                  @default(false)
  created_date           DateTime                 @default(now())
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?
  description            String?
  rate                   Float?
  total                  Float?
  bom_type               String?
  machinery_id           Int?
  labour_id              Int?
  bom_configuration_id   Int?
  bom_configuration_data bom_configuration?       @relation(fields: [bom_configuration_id], references: [bom_configuration_id])
  uom_data               uom?                     @relation(fields: [uom_id], references: [uom_id])
  category_data          category?                @relation(fields: [category_id], references: [category_id])
  sub_category_data      sub_category?            @relation(fields: [sub_category_id], references: [sub_category_id])
  sub_sub_category_data  sub_sub_category?        @relation(fields: [sub_sub_category_id], references: [sub_sub_category_id])
  item_data              item?                    @relation(fields: [item_id], references: [item_id])
  labour_data            labour?                  @relation(fields: [labour_id], references: [labour_id])
  machinery_data         machinery?               @relation(fields: [machinery_id], references: [machinery_id])
  indent_request_details indent_request_details[]

  @@map("bom_detail")
}

model vendor {
  vendor_id                     Int                @id @default(autoincrement())
  vendor_name                   String             @db.VarChar(100)
  contact_person                String?            @db.VarChar(50)
  contact_email                 String?            @db.VarChar(100)
  contact_phone_no              String?            @db.VarChar(20)
  address                       Json?
  tax_id                        String?            @db.VarChar(50)
  payment_terms                 String?
  preferred_payment_method_id   Int?
  bank_account_details          Json?
  currency                      String?            @db.VarChar(10)
  vendor_category_id            Int?
  lead_time                     String?            @db.VarChar(20)
  minimum_order_quantity        Int?
  notes                         String?
  is_delete                     Boolean            @default(false)
  created_date                  DateTime           @default(now())
  updated_date                  DateTime
  created_by                    Int?
  updated_by                    Int?
  vendor_category_data          master_data?       @relation("VendorCategoryRelation", fields: [vendor_category_id], references: [master_data_id])
  preferred_payment_method_data master_data?       @relation("PreferredPaymentMethodRelation", fields: [preferred_payment_method_id], references: [master_data_id])
  purchase_request              purchase_request[]
  vendor_quotes_data            vendor_quotes[]
}

model labour {
  labour_id    Int          @id @default(autoincrement())
  labour_type  String       @db.VarChar(100)
  rate         Float?
  uom_id       Int?
  is_delete    Boolean      @default(false)
  created_date DateTime     @default(now())
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  uom          uom?         @relation(fields: [uom_id], references: [uom_id])
  bom_detail   bom_detail[]
}

model machinery {
  machinery_id        Int          @id @default(autoincrement())
  machinery_name      String       @db.VarChar(255)
  machinery_model     String?      @db.VarChar(50)
  machinery_type      String?      @db.VarChar(50)
  manufacturer        String?      @db.VarChar(255)
  date_of_purchase    DateTime?
  warranty_expired_on DateTime?
  operational_status  String?      @db.VarChar(50)
  location            String?      @db.VarChar(255)
  rate                Float?
  uom_id              Int?
  is_delete           Boolean      @default(false)
  created_date        DateTime     @default(now())
  updated_date        DateTime
  created_by          Int?
  updated_by          Int?
  uom_data            uom?         @relation(fields: [uom_id], references: [uom_id])
  bom_detail          bom_detail[]

  @@map("machinery")
}

model bom_configuration {
  bom_configuration_id Int            @id @default(autoincrement())
  bom_name             String
  bom_description      String?
  bom_type_id          Int?
  project_id           Int?
  budget               Float?
  is_delete            Boolean        @default(false)
  created_date         DateTime       @default(now())
  updated_date         DateTime
  created_by           Int?
  updated_by           Int?
  bom_type_data        master_data?   @relation(fields: [bom_type_id], references: [master_data_id])
  project_data         project?       @relation(fields: [project_id], references: [project_id])
  bom_detail           bom_detail[]
  category             category[]
  sub_category         sub_category[]
}

model user_primary_project {
  user_primary_project_id Int      @id @default(autoincrement())
  user_id                 Int?
  project_id              Int?
  created_date            DateTime @default(now())
  updated_date            DateTime
  created_by              Int?
  updated_by              Int?
  user_data               users?   @relation(fields: [user_id], references: [user_id])
  project_data            project? @relation(fields: [project_id], references: [project_id])
}

model project_member_association {
  project_member_association_id Int       @id @default(autoincrement())
  project_id                    Int
  user_id                       Int
  project_role_id               Int?
  access_start_date             DateTime?
  access_end_date               DateTime?
  is_delete                     Boolean   @default(false)
  created_date                  DateTime  @default(now())
  updated_date                  DateTime
  created_by                    Int?
  updated_by                    Int?
  project_data                  project   @relation(fields: [project_id], references: [project_id])
  user_data                     users     @relation(fields: [user_id], references: [user_id])
  project_role_data             role?     @relation(fields: [project_role_id], references: [role_id])
}

model store {
  store_id           Int              @id @default(autoincrement())
  store_name         String?
  store_manager_id   Int
  address            Json?
  contact_email      String?
  contact_phone      String?
  project_id         Int?
  site_id            Int?
  is_delete          Boolean          @default(false)
  created_date       DateTime         @default(now())
  updated_date       DateTime
  created_by         Int?
  updated_by         Int?
  store_manager_data users?           @relation(fields: [store_manager_id], references: [user_id])
  project_data       project?         @relation(fields: [project_id], references: [project_id])
  site_data          site_contractor? @relation(fields: [site_id], references: [site_contractor_id])
  inventory          inventory[]
}

model indent_request {
  indent_request_id      Int                      @id @default(autoincrement())
  project_id             Int?
  requester_user_id      Int
  requested_date         DateTime
  request_status         String?
  priority               String?
  description            String?
  expected_delivery_date DateTime?
  total_cost             Float?
  approvar_user_id       Int?
  approvar_status        String?
  approved_date          DateTime?
  rejected_date          DateTime?
  approvar_comments      String?
  is_delete              Boolean                  @default(false)
  created_date           DateTime                 @default(now())
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?
  requester_user_data    users                    @relation("indentRequesterUser", fields: [requester_user_id], references: [user_id])
  approvar_user_data     users?                   @relation("indentApprovarUser", fields: [approvar_user_id], references: [user_id])
  project_data           project?                 @relation(fields: [project_id], references: [project_id])
  indent_request_details indent_request_details[]
  purchase_request       purchase_request[]
}

model indent_request_details {
  indent_request_details_id Int            @id @default(autoincrement())
  indent_request_id         Int
  bom_detail_id             Int
  quantity                  Int?
  total                     Float?
  is_delete                 Boolean        @default(false)
  created_date              DateTime       @default(now())
  updated_date              DateTime
  created_by                Int?
  updated_by                Int?
  indent_request_data       indent_request @relation(fields: [indent_request_id], references: [indent_request_id])
  bom_detail_data           bom_detail     @relation(fields: [bom_detail_id], references: [bom_detail_id])
}

model inventory {
  inventory_id       Int      @id @default(autoincrement())
  item_id            Int
  item_name          String?
  item_category      String?
  rate               Float?
  available_quantity Int
  store_id           Int
  project_id         Int?
  is_delete          Boolean  @default(false)
  created_date       DateTime @default(now())
  updated_date       DateTime
  created_by         Int?
  updated_by         Int?
  item_data          item     @relation(fields: [item_id], references: [item_id])
  store_data         store    @relation(fields: [store_id], references: [store_id])
  project_data       project? @relation(fields: [project_id], references: [project_id])
}

model purchase_request {
  purchase_request_id     Int            @id @default(autoincrement())
  indent_request_id       Int
  requester_user_id       Int
  request_date            DateTime?
  status                  String?
  vendor_selection_method String?
  project_id              Int?
  selected_vendor_id      Int?
  total_cost              Float?
  is_delete               Boolean        @default(false)
  created_date            DateTime       @default(now())
  updated_date            DateTime
  created_by              Int?
  updated_by              Int?
  indent_request_data     indent_request @relation(fields: [indent_request_id], references: [indent_request_id])
  requester_user_data     users          @relation(fields: [requester_user_id], references: [user_id])
  project_data            project?       @relation(fields: [project_id], references: [project_id])
  selected_vendor_data    vendor?        @relation(fields: [selected_vendor_id], references: [vendor_id])
  vendor_quotes_data     vendor_quotes[]
}

model vendor_quotes {
  vendor_quotes_id         Int            @id @default(autoincrement())
  vendor_id                Int
  purchase_request_id      Int
  quotation_date           DateTime?
  quotation_status         String?
  total_quotation_amount   Float?
  remarks                  String?
  quotation_details        Json?
  is_delete                Boolean        @default(false)
  created_date             DateTime       @default(now())
  updated_date             DateTime
  created_by               Int?
  updated_by               Int?
  purchase_request_data    purchase_request @relation(fields: [purchase_request_id], references: [purchase_request_id])
  vendor_data              vendor           @relation(fields: [vendor_id], references: [vendor_id])

}
