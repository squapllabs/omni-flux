generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model users {
  user_id          Int            @id @default(autoincrement())
  first_name       String?        @db.VarChar(100)
  last_name        String?        @db.VarChar(100)
  user_password    String?        @db.VarChar(255)
  contact_no       String?        @db.VarChar(20)
  email_id         String         @db.VarChar(100)
  user_status      String?        @db.VarChar(5)
  created_by       Int?
  created_date     DateTime
  updated_by       Int?
  updated_date     DateTime
  is_delete        Boolean        @default(false) @db.Boolean
  is_initial_login Boolean        @default(true) @db.Boolean
  department       String?        @db.VarChar(100)
  projects         project[]
  user_profiles    user_profiles?

  @@unique([email_id], name: "uk_users_email_id")
}

model user_roles {
  user_role_id Int      @id @default(autoincrement())
  user_id      Int?
  role_id      Int?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?

  @@unique([user_id, role_id], name: "uk_user_roles_user_id_role_id")
}

model role {
  role_id      Int      @id @default(autoincrement())
  role_name    String   @db.VarChar(100)
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?

  @@map("role")
}

model gst {
  gst_id       Int      @id @default(autoincrement())
  rate         Float?
  cgst_rate    Float?
  igst_rate    Float?
  created_date DateTime @default(now())
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  sgst_rate    Float?
  item         item[]
}

model uom {
  uom_id       Int      @id @default(autoincrement())
  name         String   @db.VarChar(50)
  description  String?
  created_date DateTime @default(now())
  updated_date DateTime @default(now())
  created_by   Int?
  updated_by   Int?
  item         item[]

  @@map(name: "uom")
}

model client {
  client_id       Int       @id @default(autoincrement())
  name            String    @db.VarChar(100)
  contact_details String
  created_date    DateTime
  updated_date    DateTime
  created_by      Int?
  updated_by      Int?
  projects        project[]
}

model hsn_code {
  hsn_code_id  Int      @id @default(autoincrement())
  code         String   @db.VarChar(100)
  description  String?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  item         item[]
  is_delete    Boolean  @default(false) @db.Boolean

  @@unique([code], name: "uk_hsn_code_code")
  @@map(name: "hsn_code")
}

model category {
  category_id  Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  project_id   Int?
  budget       Float?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?
  project      project?       @relation(fields: [project_id], references: [project_id])
  is_delete    Boolean        @default(false) @db.Boolean
  sub_category sub_category[]
}

model sub_category {
  sub_category_id  Int                @id @default(autoincrement())
  name             String             @db.VarChar(100)
  category_id      Int?
  budget           Float?
  created_date     DateTime
  updated_date     DateTime
  created_by       Int?
  updated_by       Int?
  is_delete        Boolean            @default(false) @db.Boolean
  category         category?          @relation(fields: [category_id], references: [category_id])
  sub_sub_category sub_sub_category[]
}

model sub_sub_category {
  sub_sub_category_id Int           @id @default(autoincrement())
  name                String        @db.VarChar(100)
  sub_category_id     Int?
  budget              Float?
  created_date        DateTime
  updated_date        DateTime
  created_by          Int?
  updated_by          Int?
  item                item[]
  is_delete           Boolean       @default(false) @db.Boolean
  sub_category        sub_category? @relation(fields: [sub_category_id], references: [sub_category_id])
}

model project {
  project_id   Int        @id @default(autoincrement())
  project_name String     @db.VarChar(100)
  description  String?
  user_id      Int?
  date_started DateTime?
  date_ended   DateTime?
  status       String?    @db.VarChar(50)
  budget       Float?
  client_id    Int?
  document_url String?
  created_date DateTime   @default(now())
  updated_date DateTime   @updatedAt
  created_by   Int?
  updated_by   Int?
  is_delete    Boolean    @default(false)
  user         users?     @relation(fields: [user_id], references: [user_id])
  client       client?    @relation(fields: [client_id], references: [client_id])
  category     category[]
}

model project_expense {
  project_expense_id Int       @id @default(autoincrement())
  project_id         Int?
  description        String?
  amount             Float?
  date               DateTime?
  document_url       String?
  created_date       DateTime
  updated_date       DateTime
  created_by         Int?
  updated_by         Int?

  @@map("project_expense")
}

model site {
  site_id      Int      @id @default(autoincrement())
  site_name    String   @db.VarChar(100)
  location     String?
  user_id      Int?
  created_date DateTime
  updated_date DateTime
  created_by   Int?
  updated_by   Int?

  @@map("site")
}

model site_expense {
  site_expense_id Int       @id @default(autoincrement())
  site_id         Int?
  description     String?
  amount          Float?
  date            DateTime?
  document_url    String?
  created_date    DateTime
  updated_date    DateTime
  created_by      Int?
  updated_by      Int?

  @@map("site_expense")
}

model warehouse {
  warehouse_id   Int      @id @default(autoincrement())
  warehouse_name String   @db.VarChar(100)
  location       String?
  created_date   DateTime
  updated_date   DateTime
  created_by     Int?
  updated_by     Int?

  @@map("warehouse")
}

model warehouse_inventory {
  warehouse_inventory_id Int      @id @default(autoincrement())
  warehouse_id           Int?
  item_id                Int?
  quantity               Int?
  created_date           DateTime
  updated_date           DateTime
  created_by             Int?
  updated_by             Int?

  @@unique([warehouse_id, item_id], name: "fk_warehouse_inventory_warehouse_id_item_id")
  @@map("warehouse_inventory")
}

model item {
  item_id             Int               @id @default(autoincrement())
  item_name           String            @db.VarChar(100)
  sub_sub_category_id Int?
  description         String?
  hsn_code_id         Int?
  gst_id              Int?
  uom_id              Int?
  created_date        DateTime
  updated_date        DateTime
  created_by          Int?
  updated_by          Int?
  item_type_id        Int?
  brand_id            Int?
  // Relation to fetch hsn_code_name from hsn_code model
  hsn_code            hsn_code?         @relation(fields: [hsn_code_id], references: [hsn_code_id])
  gst                 gst?              @relation(fields: [gst_id], references: [gst_id])
  uom                 uom?              @relation(fields: [uom_id], references: [uom_id])
  item_type           item_type?        @relation(fields: [item_type_id], references: [item_type_id])
  sub_sub_category    sub_sub_category? @relation(fields: [sub_sub_category_id], references: [sub_sub_category_id])
  brand               brand?            @relation(fields: [brand_id], references: [brand_id])

  @@map(name: "item")
}

model stock {
  stock_id         Int      @id @default(autoincrement())
  item_id          Int?
  transaction_type String?
  quantity         Int?
  transaction_date DateTime
  warehouse_id     Int?
  site_id          Int?
  created_date     DateTime
  updated_date     DateTime
  created_by       Int?
  updated_by       Int?
}

model item_type {
  item_type_id        Int      @id @default(autoincrement())
  item_type_item_code String?
  item_type_item_name String?
  created_date        DateTime
  updated_date        DateTime
  created_by          Int?
  updated_by          Int?

  item item[]
}

model brand {
  brand_id     Int      @id @default(autoincrement())
  brand_name   String?
  created_by   Int?
  updated_by   Int?
  created_date DateTime
  updated_date DateTime

  item item[]
}

model user_profiles {
  user_profile_id   Int       @id @default(autoincrement())
  user_id           Int
  profile_image_url String?
  date_of_birth     DateTime?
  gender            String?
  address           Json?
  additional_info   Json?
  created_date      DateTime
  updated_date      DateTime
  created_by        Int?
  updated_by        Int?
  is_delete         Boolean   @default(false)
  user              users     @relation(fields: [user_id], references: [user_id])

  @@unique([user_id])
}
